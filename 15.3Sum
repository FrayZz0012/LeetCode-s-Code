#include<bits/stdc++.h>
using namespace std;
//这道题需要重点注意去重问题

//双指针法
vector<vector<int>> threeSum(vector<int>& nums) {
    vector<vector<int>> res;
    sort(nums.begin(),nums.end());
    int len = nums.size();
    int l,r;
    for(int i=0;i<len-2;i++){
        l = i+1,r = len-1;
        if(i>0 && nums[i] == nums[i-1]){
            continue;
        }
        while(l<r){
            if((l != i+1 && nums[l] == nums[l-1])){
                l++;
                continue;;
            }
            if((r != len -1 && nums[r] == nums[r+1])){
                r--;
                continue;
            }
            if(nums[l]+nums[r]+nums[i] > 0){
                r--;
            }
            else if(nums[l]+nums[r]+nums[i] < 0){
                l++;
            }
            else{
                res.push_back({nums[i],nums[l],nums[r]});
                l++;
                r--;
            }
        }
    }
    return res;
}

int main(){
    vector<int> v1{-13,5,13,12,-2,-11,-1,12,-3,0,-3,-7,-7,-5,-3,-15,-2,14,14,13,6,-11,-11,5,-15,-14,5,-5,-2,0,3,-8,-10,-7,11,-5,-10,-5,-7,-6,2,5,3,2,7,7,3,-10,-2,2,-12,-11,-1,14,10,-9,-15,-8,-7,-9,7,3,-2,5,11,-13,-15,8,-3,-7,-12,7,5,-2,-6,-3,-10,4,2,-5,14,-3,-1,-10,-3,-14,-4,-3,-7,-4,3,8,14,9,-2,10,11,-10,-4,-15,-9,-1,-1,3,4,1,8,1};
    vector<int> v2{-1,0,1,2,-1,-4};
    vector<int> v3{9,4,9,8,4};
    vector<int> v4{9,4,9,8,4};
    threeSum(v2);
    return 0;
}
